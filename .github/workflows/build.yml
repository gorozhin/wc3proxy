name: Build
on: [push, workflow_dispatch]

defaults: {run: {shell: bash}}

jobs:
  build-linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install libfuse
        run: sudo apt-get install -y libfuse2

      - name: Build Linux AppImage
        run: ./scripts/build-linux-x64
      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: dist/WC3Proxy.*

  build-mac:
    name: Mac
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build DMG
        run: ./scripts/build-mac-x64
      - name: Upload DMG
        uses: actions/upload-artifact@v2
        with:
          name: mac
          path: dist/wc3proxy.dmg

  build-win:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build EXE
        run: ./scripts/build-windows-x64
      - name: Upload EXE
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: dist/wc3proxy.exe
      - name: Upload wc3proxy-cli EXE
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: dist/wc3proxy-cli.exe

  release-task:
    name: Upload
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-win]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download all artifacts
        uses: actions/download-artifact@v2
      - name: Create a Release
        uses: elgohr/Github-Release-Action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          title: "v0.0.${{ github.run_number }}"
      - name: Upload wc3proxy.exe (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/wc3proxy.exe
          asset_name: wc3proxy.exe
          asset_content_type: application/octet-stream
      - name: Upload wc3proxy-cli.exe (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/wc3proxy-cli.exe
          asset_name: wc3proxy-cli.exe
          asset_content_type: application/octet-stream
      - name: Upload WC3Proxy.AppImage (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/WC3Proxy.AppImage
          asset_name: WC3Proxy.AppImage
          asset_content_type: application/octet-stream
      - name: Upload WC3Proxy.AppImage.zsync (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/WC3Proxy.AppImage.zsync
          asset_name: WC3Proxy.AppImage.zsync
          asset_content_type: application/octet-stream
      - name: Upload wc3proxy.dmg (Mac)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mac/wc3proxy.dmg
          asset_name: wc3proxy.dmg
          asset_content_type: application/octet-stream
      - name: Publish Release
        run: "hub release edit --draft=false -m '' v0.0.${RUN_NUMBER}"
        env:
          RUN_NUMBER: ${{ github.run_number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
